{"version":3,"sources":["fbase.js","components/Nweet.js","components/NweetFcatory.js","routes/Home.js","components/AuthForm.js","routes/Auth.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","Nweet","nweetObj","isOwner","useState","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","a","window","confirm","doc","id","delete","attachmentUrl","refFromURL","toggleEditing","prev","onSubmit","event","preventDefault","update","className","type","placeholder","value","required","autoFocus","onChange","target","onClick","src","icon","faPencilAlt","faTrash","NweetFcatory","userObj","nweet","setNweet","attachment","setAttachment","fileInput","useRef","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","current","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","style","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","data","AuthForm","authError","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","currentUser","sendEmailVerification","alert","signOut","signInWithEmailAndPassword","emailVerified","message","Auth","setAuthError","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faTwitter","color","size","marginBottom","faGoogle","faGithub","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","orderBy","get","console","log","updateProfile","marginTop","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isSignIn","maxWidt","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","providerData","providerId","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPAcAA,IAASC,cATc,CACnBC,OAAQC,0CACRC,WAAYD,kCACZE,UAAWF,kBACXG,cAAeH,8BACfI,kBAAmBJ,eACnBK,MAAOL,8CAKJ,IAAMM,EAAmBT,IAEnBU,EAAcV,IAASW,OACvBC,EAAYZ,IAASa,YACrBC,EAAiBd,IAASe,U,+CCiDxBC,EAhED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACvB,EAA8BC,oBAAS,GAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAgCF,mBAASF,EAASK,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAAa,uCAAG,sBAAAC,EAAA,0DACPC,OAAOC,QAAQ,gDADR,gCAGRhB,EAAUiB,IAAV,iBAAwBZ,EAASa,KAAMC,SAH/B,WAIXd,EAASe,cAJE,gCAKJlB,EAAemB,WAAWhB,EAASe,eAAeD,SAL9C,2CAAH,qDAUbG,EAAgB,WAClBb,GAAW,SAACc,GAAD,OAAWA,KACtBX,EAAYP,EAASK,OAQnBc,EAAQ,uCAAG,WAAMC,GAAN,SAAAX,EAAA,sDACbW,EAAMC,iBACN1B,EAAUiB,IAAV,iBAAwBZ,EAASa,KAAMS,OAAO,CAC1CjB,KAAMC,IAEVF,GAAW,GALE,2CAAH,sDAQd,OACI,qBAAKmB,UAAU,QAAf,SAEQpB,EACI,qCACI,uBAAMgB,SAAUA,EAAUI,UAAU,sBAApC,UACI,uBAAOC,KAAK,OAAOC,YAAY,aAAaC,MAAOpB,EAAUqB,UAAQ,EAACC,WAAS,EAACC,SAnBvF,SAACT,GACd,IAAgBM,EAAUN,EAAnBU,OAASJ,MAChBnB,EAAYmB,IAiB4GH,UAAU,cAC9G,uBAAOC,KAAK,SAASE,MAAM,eAAeH,UAAU,eAExD,sBAAMQ,QAASd,EAAeM,UAAU,oBAAxC,uBAGJ,qCACI,6BAAKvB,EAASK,OACbL,EAASe,eAAiB,qBAAKiB,IAAKhC,EAASe,gBAC7Cd,GACG,sBAAKsB,UAAU,iBAAf,UACI,sBAAMQ,QAASd,EAAf,SACI,cAAC,IAAD,CAAiBgB,KAAMC,QAE3B,sBAAMH,QAASvB,EAAf,SACI,cAAC,IAAD,CAAiByB,KAAME,iB,QCwB5CC,EA5EM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,EAA0BnC,mBAAS,IAAnC,mBAAOoC,EAAP,KAAcC,EAAd,KACA,EAAoCrC,mBAAS,IAA7C,mBAAOsC,EAAP,KAAmBC,EAAnB,KACMC,EAAYC,mBAuBZxB,EAAQ,uCAAG,WAAMC,GAAN,qBAAAX,EAAA,yDACA,KAAV6B,EADU,oDAEblB,EAAMC,iBACFN,EAAgB,GACF,KAAfyB,EAJU,wBAKHI,EAAgB/C,EAAegD,MAAMC,MAArB,UAA8BT,EAAQU,IAAtC,YAA6CC,gBAL1D,SAMcJ,EAAcK,UAAUT,EAAY,YANlD,cAMHU,EANG,iBAOaA,EAASL,IAAIM,iBAP1B,QAOTpC,EAPS,sBASPf,EAAW,CACbK,KAAMiC,EACNc,UAAWC,KAAKC,MAChBC,UAAWlB,EAAQU,IACnBhC,iBAbS,UAePpB,EAAU6D,WAAW,UAAUC,IAAIzD,GAf5B,QAqBbuC,EAAS,IACTE,EAAc,IACdC,EAAUgB,QAAQhC,MAAQ,GAvBb,4CAAH,sDA0Bd,OACI,uBAAMP,SAAUA,EAAUI,UAAU,cAApC,UACI,sBAAKA,UAAU,0BAAf,UACI,uBAAOC,KAAK,OAAOK,SAlDf,SAACT,GACb,IAAgBM,EAAUN,EAAnBU,OAASJ,MAChBa,EAASb,IAgDsCA,MAAOY,EAAOb,YAAY,uBAAuBkC,UAAW,IAAKpC,UAAU,wBAClH,uBAAOC,KAAK,SAASE,MAAM,SAASH,UAAU,2BAElD,wBAAOqC,IAAI,cAAcrC,UAAU,sBAAnC,UACI,8CACA,cAAC,IAAD,CAAiBU,KAAM4B,SAE3B,uBAAOhD,GAAG,cAAcW,KAAK,OAAOsC,OAAO,UAAUjC,SApDxC,SAACT,GAClB,IACM2C,EADoB3C,EAAnBU,OAASkC,MACM,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAChB,IAAuBC,EAAWD,EAA3BE,cAAgBD,OACvB5B,EAAc4B,IAElBJ,EAAOM,cAAcR,IA4C4DlB,IAAKH,EAAW8B,MAAO,CAAEC,QAAS,KAC9GjC,GACG,sBAAKjB,UAAU,0BAAf,UACI,qBAAKS,IAAKQ,EAAYgC,MAAO,CAAEE,gBAAiBlC,KAChD,sBAAKjB,UAAU,qBAAqBQ,QA7C1B,WACtBU,EAAc,IACdC,EAAUgB,QAAQhC,MAAQ,IA2Cd,UACI,0CACA,cAAC,IAAD,CAAiBO,KAAM0C,gBC/BhCC,EArCF,SAAC,GAAiB,IAAfvC,EAAc,EAAdA,QACZ,EAA4BnC,mBAAS,IAArC,mBAAO2E,EAAP,KAAeC,EAAf,KAwBA,OAZAC,qBAAU,WACNpF,EAAU6D,WAAW,UAAUwB,YAAW,SAACC,GACvC,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAAAxE,GAAG,oBACpCC,GAAID,EAAIC,IACLD,EAAIyE,WAEXP,EAAUI,QAIf,IAGC,gCACI,cAAC,EAAD,CAAc7C,QAASA,IACvB,8BACKwC,EAAOO,KAAI,SAAA9C,GAAK,OACb,cAAC,EAAD,CAAsBtC,SAAUsC,EAAOrC,QAASqC,EAAMiB,YAAclB,EAAQU,KAAhET,EAAMzB,aCqBvByE,EAtDE,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAEhB,EAA0BrF,mBAAS,IAAnC,mBAAOsF,EAAP,KAAcC,EAAd,KACA,EAAgCvF,mBAAS,IAAzC,mBAAOwF,EAAP,KAAiBC,EAAjB,KACA,EAAoCzF,oBAAS,GAA7C,mBAAO0F,EAAP,KAAmBC,EAAnB,KACA,EAA0B3F,mBAAS,IAAnC,mBAAO4F,EAAP,KAAcC,EAAd,KAEMlE,EAAW,SAACT,GACd,MAAgCA,EAAzBU,OAASJ,EAAhB,EAAgBA,MAAOsE,EAAvB,EAAuBA,KACX,UAATA,EAAkBP,EAAS/D,GACb,aAATsE,GAAqBL,EAAYjE,IAKvCP,EAAQ,uCAAG,WAAMC,GAAN,SAAAX,EAAA,yDACbW,EAAMC,iBADO,UAGNuE,EAHM,iCAICnG,EAAYwG,+BAA+BT,EAAOE,GAJnD,uBAKCjG,EAAYyG,YAAYC,wBALzB,OAMLzF,OAAO0F,MAAM,2HACbX,EAAS,IACTE,EAAY,IACZlG,EAAY4G,UATP,yCAWC5G,EAAY6G,2BAA2Bd,EAAOE,GAX/C,yBAYkBjG,EAAYyG,YAAYK,cAZ1C,uCAca7F,OAAOC,QAAQ,+KAd5B,kCAeelB,EAAYyG,YAAYC,wBAfvC,QAgBD1G,EAAY4G,UAhBX,0DAoBTN,EAAS,KAAMS,SApBN,0DAAH,sDAwBd,OACI,qCACI,uBAAMrF,SAAUA,EAAUI,UAAU,YAApC,UACI,uBAAOyE,KAAK,QAAQxE,KAAK,OAAOC,YAAY,QAAQE,UAAQ,EAACD,MAAO8D,EAAO3D,SAAUA,EAAUN,UAAU,cACzG,uBAAOyE,KAAK,WAAWxE,KAAK,WAAWC,YAAY,WAAWE,UAAQ,EAACD,MAAOgE,EAAU7D,SAAUA,EAAUN,UAAU,cACtH,uBAAOC,KAAK,SAASE,MAAOkE,EAAa,iBAAmB,UAAWrE,UAAU,0BACnFuE,GAASP,IAAc,sBAAMhE,UAAU,YAAhB,SAA8BuE,GAASP,OAEhE,sBAAMxD,QAlCQ,kBAAM8D,GAAc,SAAC3E,GAAD,OAAWA,MAkCfK,UAAU,aAAxC,SACKqE,EAAa,UAAY,uB,QCT3Ba,EApCF,WACT,MAAkCvG,mBAAS,IAA3C,mBAAOqF,EAAP,KAAkBmB,EAAlB,KAEMC,EAAa,uCAAG,WAAMvF,GAAN,iBAAAX,EAAA,sEAIF,YAFIuF,EAAS5E,EAAlBU,OAASkE,MAGZY,EAAW,IAAIpH,EAAiBE,KAAKmH,mBACtB,WAATb,IACNY,EAAW,IAAIpH,EAAiBE,KAAKoH,oBAP3B,SASRrH,EAAYsH,gBAAgBH,GATpB,uDAWdF,EAAa,KAAMF,SAXL,yDAAH,sDAenB,OACI,sBAAKjF,UAAU,gBAAf,UACI,cAAC,IAAD,CAAiBU,KAAM+E,IAAWC,MAAO,UAAWC,KAAK,KAAK1C,MAAO,CAAE2C,aAAc,MACrF,cAAC,EAAD,CAAU5B,UAAWA,IACrB,sBAAKhE,UAAU,WAAf,UACI,yBAAQQ,QAAS4E,EAAeX,KAAK,SAASzE,UAAU,UAAxD,iCAEI,cAAC,IAAD,CAAiBU,KAAMmF,SAE3B,yBAAQrF,QAAS4E,EAAeX,KAAK,SAASzE,UAAU,UAAxD,iCAEI,cAAC,IAAD,CAAiBU,KAAMoF,gBCa5BC,EA5CC,SAAC,GAA8B,IAA5BjF,EAA2B,EAA3BA,QAASkF,EAAkB,EAAlBA,YAClBC,EAAUC,cAChB,EAA4CvH,mBAASmC,EAAQqF,aAA7D,mBAAOC,EAAP,KAAuBC,EAAvB,KAEMC,EAAW,uCAAG,4BAAApH,EAAA,sEACKd,EAAU6D,WAAW,UAAUsE,MAAM,YAAa,KAAMzF,EAAQU,KAAKgF,QAAQ,YAAa,QAAQC,MADvG,OACVnD,EADU,OAEhBoD,QAAQC,IAAIrD,EAAOM,KAAKC,KAAI,SAAAxE,GAAG,OAAIA,EAAIyE,WAFvB,2CAAH,qDAKjBN,qBAAU,WACN8C,MACD,IACH,IAIM1G,EAAQ,uCAAG,WAAMC,GAAN,SAAAX,EAAA,yDACbW,EAAMC,iBACHgB,EAAQqF,cAAgBC,EAFd,gCAGHtF,EAAQ8F,cAAc,CACxBT,YAAaC,IAJR,OAObJ,IAPa,2CAAH,sDAed,OACI,sBAAKhG,UAAU,YAAf,UACI,uBAAMJ,SAAUA,EAAUI,UAAU,cAApC,UACI,uBAAOC,KAAK,OAAOC,YAAY,eAAeC,MAAOiG,EAAgB9F,SAtBhE,SAACT,GACd,IAAgBM,EAAUN,EAAnBU,OAASJ,MAChBkG,EAAkBlG,IAoB+EE,WAAS,EAACL,UAAU,cAC7G,uBAAOC,KAAK,SAASE,MAAM,iBAAiBH,UAAU,UAAUiD,MAAO,CAAE4D,UAAW,SAExF,sBAAM7G,UAAU,2BAA2BQ,QAX5B,WACnBtC,EAAY4G,UACZmB,EAAQa,KAAK,MAST,0B,QCTGC,EA1BI,SAAC,GAAiB,IAAfjG,EAAc,EAAdA,QAClB,OACI,8BACI,qBAAImC,MAAO,CAAE+D,QAAS,OAAQC,eAAgB,SAAUJ,UAAW,IAAnE,UACI,6BACI,cAAC,IAAD,CAAMK,GAAG,IAAIjE,MAAO,CAAEkE,YAAa,IAAnC,SACI,cAAC,IAAD,CAAiBzG,KAAM+E,IAAWC,MAAO,UAAWC,KAAK,WAGjE,6BACI,eAAC,IAAD,CAAMuB,GAAG,WAAWjE,MAAO,CAACmE,WAAY,GAAIJ,QAAS,OAAQK,cAAe,SAAUC,WAAY,SAAUC,SAAU,IAAtH,UACI,cAAC,IAAD,CAAiB7G,KAAM8G,IAAQ9B,MAAO,UAAWC,KAAK,OACtD,sBAAM1C,MAAO,CAAE4D,UAAW,IAA1B,SAEQ/F,EAAQqF,YAAR,UACKrF,EAAQqF,YADb,cAEE,uBCWnBsB,EA1BG,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,SAAU5G,EAA2B,EAA3BA,QAASkF,EAAkB,EAAlBA,YACpC,OACI,eAAC,IAAD,WACK0B,GAAY,cAAC,EAAD,CAAY5G,QAASA,IAClC,cAAC,IAAD,UACM4G,EACE,mCACI,sBAAKzE,MAAO,CAAE0E,QAAS,IAAKC,MAAO,OAAQC,OAAQ,SAAUhB,UAAW,GAAIG,QAAS,OAAQC,eAAgB,UAA7G,UACI,cAAC,IAAD,CAAOa,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMjH,QAASA,MAEnB,cAAC,IAAD,CAAOgH,OAAK,EAACC,KAAK,WAAlB,SACI,cAAC,EAAD,CAASjH,QAASA,EAASkF,YAAaA,WAKpD,cAAC,IAAD,CAAO8B,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,EAAD,YCwBTC,MA7Cf,WACE,MAAwBrJ,oBAAS,GAAjC,mBAAOsJ,EAAP,KAAaC,EAAb,KACA,EAA8BvJ,mBAAS,MAAvC,mBAAOmC,EAAP,KAAgBqH,EAAhB,KAoCA,OA9BA3E,qBAAU,WACRtF,EAAYkK,oBAAmB,SAACC,GAC3BA,IAEsC,aAApCA,EAAKC,aAAa,GAAGC,YAA8BF,EAAKrD,eAGzDmD,EAAW,CACThC,YAAakC,EAAKlC,YAClB3E,IAAK6G,EAAK7G,IACVoF,cAAe,SAAC4B,GAAD,OAAUH,EAAKzB,cAAc4B,MAIhDL,EAAW,MAEbD,GAAQ,QAET,IAaD,mCACGD,EAAO,cAAC,EAAD,CAAWP,SAAUe,QAAQ3H,GAAUA,QAASA,EAASkF,YAZjD,WAClB,IAAMqC,EAAOnK,EAAYyG,YAEzBwD,EAAW,CACThC,YAAakC,EAAKlC,YAClB3E,IAAK6G,EAAK7G,IACVoF,cAAe,SAAC4B,GAAD,OAAUH,EAAKzB,cAAc4B,SAMqD,qB,MCvCvGE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fc3a906c.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_ID,\r\n    appId: process.env.REACT_APP_APP_ID\r\n};\r\n  // Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import React, { useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm('Are you sure? you want to delete this nweet?');\r\n        if(ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            if(nweetObj.attachmentUrl) {\r\n                await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n            }\r\n        }\r\n    };\r\n\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev)\r\n        setNewNweet(nweetObj.text);\r\n    };\r\n\r\n    const onChange = (event) => {\r\n        const {target :{value}} = event;\r\n        setNewNweet(value);\r\n    };\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text: newNweet\r\n        });\r\n        setEditing(false);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? (\r\n                    <>\r\n                        <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                            <input type=\"text\" placeholder=\"Edit Nweet\" value={newNweet} required autoFocus onChange={onChange} className=\"formInput\" />\r\n                            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\r\n                        </form>\r\n                        <span onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</span>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                            <div className=\"nweet__actions\">\r\n                                <span onClick={toggleEditing}>\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </span>\r\n                                <span onClick={onDeleteClick}>\r\n                                    <FontAwesomeIcon icon={faTrash} />\r\n                                </span>\r\n                            </div>\r\n                        )}\r\n                   </>\r\n                )\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Nweet;","import React, { useRef, useState } from 'react';\r\nimport { dbService, storageService } from 'fbase';\r\nimport { v4 as uuidv4} from 'uuid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst NweetFcatory = ({ userObj }) => {\r\n    const [nweet, setNweet] = useState(\"\");\r\n    const [attachment, setAttachment] = useState(\"\");\r\n    const fileInput = useRef();\r\n\r\n    const onChange =(event) => {\r\n        const {target: {value}} = event;\r\n        setNweet(value);\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        const {target: {files}} = event;\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onloadend = (finishedEvent) => {\r\n            const {currentTarget: {result}} = finishedEvent;\r\n            setAttachment(result);\r\n        }\r\n        reader.readAsDataURL(theFile);\r\n    };\r\n\r\n    const onClearAttachment = () => {\r\n        setAttachment(\"\");\r\n        fileInput.current.value = \"\";\r\n    }\r\n\r\n    const onSubmit = async(event) => {\r\n        if(nweet === \"\") return;\r\n        event.preventDefault();\r\n        let attachmentUrl = \"\";\r\n        if(attachment !== \"\") {\r\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\r\n            const response = await attachmentRef.putString(attachment, \"data_url\");\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n        const nweetObj = {\r\n            text: nweet,\r\n            createdAt: Date.now(),\r\n            creatorId: userObj.uid,\r\n            attachmentUrl\r\n        }\r\n        await dbService.collection(\"nweets\").add(nweetObj);\r\n        // await dbService.collection(\"nweets\").add({\r\n        //     text: nweet,\r\n        //     createdAt: Date.now(),\r\n        //     creatorId: userObj.uid\r\n        // });\r\n        setNweet(\"\");\r\n        setAttachment(\"\");\r\n        fileInput.current.value = \"\";\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n            <div className=\"factoryInput__container\">\r\n                <input type=\"text\" onChange={onChange} value={nweet} placeholder=\"what's on your mind?\" maxLength={120} className=\"factoryInput__input\" />\r\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n            </div>\r\n            <label for=\"attach-file\" className=\"factoryInput__label\">\r\n                <span>Add photos</span>\r\n                <FontAwesomeIcon icon={faPlus} />\r\n            </label>\r\n            <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} ref={fileInput} style={{ opacity: 0 }} />\r\n            {attachment && \r\n                <div className=\"factoryForm__attachment\">\r\n                    <img src={attachment} style={{ backgroundImage: attachment }} />\r\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n                        <span>Remove</span>\r\n                        <FontAwesomeIcon icon={faTimes} />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default NweetFcatory;","import React, { useEffect, useState } from 'react';\r\nimport { dbService } from 'fbase';\r\nimport Nweet from 'components/Nweet';\r\nimport NweetFcatory from 'components/NweetFcatory';\r\n\r\n\r\nconst Home = ({ userObj }) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    // const getNweets = async() => {\r\n    //     const dbNweets = await dbService.collection(\"nweets\").get();\r\n    //     dbNweets.forEach(doc => {\r\n    //         const nweetObj = {\r\n    //             ...doc.data(),\r\n    //             id: doc.id\r\n    //         };\r\n    //         setNweets((prev) => [nweetObj, ...prev]);\r\n    //     });\r\n    // };\r\n    useEffect(() => {\r\n        dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n            const nweetArray = snapshot.docs.map(doc => ({\r\n                id: doc.id,\r\n                ...doc.data()\r\n            }));\r\n            setNweets(nweetArray);\r\n        });\r\n        // setNweets([]);\r\n        // getNweets();\r\n    }, [])\r\n    \r\n    return (\r\n        <div>\r\n            <NweetFcatory userObj={userObj} />\r\n            <div>\r\n                {nweets.map(nweet => (\r\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useState } from 'react';\r\nimport { authService } from 'fbase';\r\n\r\nconst AuthForm = ({ authError }) => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const onChange = (event) => {\r\n        const {target :{value, name}} = event;\r\n        if(name === \"email\") setEmail(value);\r\n        else if(name === \"password\") setPassword(value);\r\n    };\r\n\r\n    const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        try {\r\n            if(newAccount) {\r\n                await authService.createUserWithEmailAndPassword(email, password);\r\n                await authService.currentUser.sendEmailVerification();\r\n                window.alert(\"email에서 인증메일을 통해 가입을 완료해 주세요!\");\r\n                setEmail(\"\");\r\n                setPassword(\"\");\r\n                authService.signOut();\r\n            } else {\r\n                await authService.signInWithEmailAndPassword(email, password);\r\n                const verified = await authService.currentUser.emailVerified;\r\n                if(!verified) {\r\n                    const again = window.confirm(\"email 인증이 필요합니다.\\n인증 메일이 안보인다면 확인을 눌러주세요!\");\r\n                    if(again) await authService.currentUser.sendEmailVerification();\r\n                    authService.signOut();\r\n                }\r\n            }\r\n        } catch (error) {\r\n            setError(error.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={onSubmit} className=\"container\">\r\n                <input name=\"email\" type=\"text\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\r\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Sign In\"} className=\"authInput authSubmit\" />\r\n            {(error || authError) && <span className=\"authError\">{(error || authError)}</span>}\r\n            </form>\r\n            <span onClick={toggleAccount} className=\"authSwitch\">\r\n                {newAccount ? \"Sign In\" : \"Create Account\"}\r\n            </span>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthForm;","import React, { useState } from 'react';\r\nimport { authService, firebaseInstance } from 'fbase';\r\nimport AuthForm from 'components/AuthForm';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithub, faGoogle, faTwitter } from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst Auth = () => {\r\n    const [authError, setAuthError] = useState(\"\");\r\n    \r\n    const onSocialClick = async(event) => {\r\n        try {\r\n            const {target: {name}} = event;\r\n            let provider;\r\n            if(name === \"google\") {\r\n                provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n            } else if(name === \"github\") { \r\n                provider = new firebaseInstance.auth.GithubAuthProvider();\r\n            }\r\n            await authService.signInWithPopup(provider);\r\n        } catch (error) {\r\n            setAuthError(error.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"authContainer\">\r\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} />\r\n            <AuthForm authError={authError} />\r\n            <div className=\"authBtns\">\r\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\r\n                    Continue with Google\r\n                    <FontAwesomeIcon icon={faGoogle} />\r\n                </button>\r\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\r\n                    Continue with Github\r\n                    <FontAwesomeIcon icon={faGithub} />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Auth;","import React, { useEffect, useState } from 'react';\r\nimport { authService, dbService } from 'fbase';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n\r\n    const getMyNweets = async() => {\r\n        const nweets = await dbService.collection(\"nweets\").where(\"creatorId\", \"==\", userObj.uid).orderBy(\"createdAt\", \"desc\").get();\r\n        console.log(nweets.docs.map(doc => doc.data()));\r\n    };\r\n\r\n    useEffect(() => {\r\n        getMyNweets();  \r\n    }, []);\r\n    const onChange = (event) => {\r\n        const {target: {value}} = event;\r\n        setNewDisplayName(value);\r\n    };\r\n    const onSubmit = async(event) => {\r\n        event.preventDefault();\r\n        if(userObj.displayName !== newDisplayName) {\r\n            await userObj.updateProfile({\r\n                displayName: newDisplayName,\r\n            });\r\n        }\r\n        refreshUser();\r\n    };\r\n\r\n    const onSignOutClick = () => {\r\n        authService.signOut();\r\n        history.push(\"/\");\r\n    };\r\n    \r\n    return (\r\n        <div className=\"container\">\r\n            <form onSubmit={onSubmit} className=\"profileForm\">\r\n                <input type=\"text\" placeholder=\"display Name\" value={newDisplayName} onChange={onChange} autoFocus className=\"formInput\" />\r\n                <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10 }} />\r\n            </form>\r\n            <span className=\"formBtn cancelBtn logOut\" onClick={onSignOutClick}>\r\n                Sign Out\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons';\r\nimport { faUser } from '@fortawesome/free-regular-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nconst Navigation = ({ userObj }) => {\r\n    return (\r\n        <nav>\r\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n                <li>\r\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link to=\"/profile\" style={{marginLeft: 10, display: \"flex\", flexDirection: \"column\", alignItems: \"center\", fontSize: 12}}>\r\n                        <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                        <span style={{ marginTop: 10 }}>\r\n                            {\r\n                                userObj.displayName\r\n                                ? `${userObj.displayName}'s Profile`\r\n                                : \"Profile\"\r\n                            }\r\n                        </span>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navigation;","import React from 'react'\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"routes/Home\";\r\nimport Auth from \"routes/Auth\";\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from 'components/Navigation';\r\n\r\nconst AppRouter = ({ isSignIn, userObj, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isSignIn && <Navigation userObj={userObj} />}\r\n            <Switch>\r\n                { isSignIn ? (\r\n                    <>\r\n                        <div style={{ maxWidt: 890, width: \"100%\", margin: \"0 auto\", marginTop: 80, display: \"flex\", justifyContent: \"center\"}}>\r\n                            <Route exact path=\"/\">\r\n                                <Home userObj={userObj} />\r\n                            </Route>    \r\n                            <Route exact path=\"/profile\">\r\n                                <Profile userObj={userObj} refreshUser={refreshUser} />\r\n                            </Route>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <Route exact path=\"/\">\r\n                        <Auth />\r\n                    </Route>\r\n                )}\r\n            </Switch>\r\n        </Router>\r\n    );\r\n};\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\r\nimport AppRouter from \"components/Router\";\r\nimport { authService } from \"fbase\";\r\n\r\nfunction App() {\r\n  const [init, setInit] = useState(false);\r\n  const [userObj, setUserObj] = useState(null);\r\n  // console.log(authService.currentUser);\r\n  // setInterval(() => {\r\n  //   console.log(authService.currentUser);\r\n  // }, 2000);\r\n\r\n  useEffect(() => {\r\n    authService.onAuthStateChanged((user) => {\r\n      if(user) {\r\n        // setUserObj(user);\r\n        if(user.providerData[0].providerId === \"password\" && !user.emailVerified) {\r\n          setUserObj(null);\r\n        } else {\r\n          setUserObj({\r\n            displayName: user.displayName,\r\n            uid: user.uid,\r\n            updateProfile: (args) => user.updateProfile(args)\r\n          });\r\n        }\r\n      } else {\r\n        setUserObj(null);\r\n      }\r\n      setInit(true);\r\n    });\r\n  }, []);\r\n\r\n  const refreshUser = () => {\r\n    const user = authService.currentUser;\r\n    // setUserObj(Object.assign({}, user));\r\n    setUserObj({\r\n      displayName: user.displayName,\r\n      uid: user.uid,\r\n      updateProfile: (args) => user.updateProfile(args)\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {init ? <AppRouter isSignIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} />  : \"Initializing...\"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'components/App';\r\nimport \"./styles.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}